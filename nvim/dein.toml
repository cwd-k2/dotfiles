#======================================
# lib
[[plugins]]
name = 'lib/dein'
repo = 'Shougo/dein.vim'

[[plugins]]
name   = 'lib/coc'
repo   = 'neoclide/coc.nvim'
rev    = 'release'
merged = 0
hook_add = '''
let g:coc_global_extensions = [
      \ 'coc-explorer',
      \ 'coc-prettier',
      \ 'coc-json',
      \ 'coc-vimlsp',
      \ ]

nmap <silent> <leader>do <Plug>(coc-diagnostic-prev)
nmap <silent> <leader>di <Plug>(coc-diagnostic-next)
nmap <silent> <leader>r  <Plug>(coc-rename)

nnoremap <nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : '<C-f>'
nnoremap <nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : '<C-b>'

nnoremap <silent> <c-k> <cmd>call CocAction('doHover')<CR>

inoremap <silent><expr> <c-space> coc#refresh()

if exists('*complete_info')
  inoremap <nowait><expr> <cr> complete_info()['selected'] != '-1' ? '<C-y>' : '<C-g>u<CR>'
else
  inoremap <nowait><expr> <cr> pumvisible() ? '<C-y>' : '<C-g>u<CR>'
endif

autocmd CursorHold * silent call CocActionAsync('highlight')

nnoremap <silent> <leader>f <cmd>CocCommand explorer<CR>

let g:coc_snippet_next = '<c-i>'
let g:coc_snippet_prev = '<c-o>'
'''

#======================================
# util
[[plugins]]
name = 'util/yankround'
repo = 'LeafCage/yankround.vim'
hook_add = '''
let g:yankround_dir = g:nvim_cache . '/yankround'
let g:yankround_max_history = 100

nmap <nowait> p <Plug>(yankround-p)
nmap <nowait> P <Plug>(yankround-P)
nmap <nowait> <C-p> <Plug>(yankround-prev)
nmap <nowait> <C-n> <Plug>(yankround-next)
'''

[[plugins]]
name = 'util/accelerated-jk'
repo = 'rhysd/accelerated-jk'
hook_add = '''
let g:accelerated_jk_acceleration_table = [
      \ 7, 12, 17, 21, 24, 26, 28, 30
      \ ]
let g:accelerated_jk_acceleration_limit = 100

nmap <nowait> j <Plug>(accelerated_jk_gj)
nmap <nowait> k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
name = 'util/repeat'
repo = 'tpope/vim-repeat'

[[plugins]]
name = 'util/gitgutter'
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_map_keys = 0
'''

[[plugins]]
name = 'util/surround'
repo = 'tpope/vim-surround'

[[plugins]]
name = 'util/auto-pairs'
repo = 'jiangmiao/auto-pairs'
hook_add = '''
augroup haskellautopair
  autocmd!
  au FileType haskell let b:AutoPairs = {
        \ '"': '"',
        \ '`': '`',
        \ '(': ')', '(#': '#)',
        \ '[': ']', '[|': '|]',
        \ '{': '}', '{-': '-}', '{-#': '#-}'
        \ }
augroup END
'''

[[plugins]]
name = 'util/tcomment'
repo = 'tomtom/tcomment_vim'

#======================================
# ui
[[plugins]]
name = 'ui/onedark'
repo = 'joshdick/onedark.vim'
hook_add = '''
"colorscheme onedark
'''

[[plugins]]
name = 'ui/corvine'
repo = 'arzg/vim-corvine'
hook_add = '''
colorscheme corvine
'''

[[plugins]]
name = 'ui/better-whitespace'
repo = 'ntpeters/vim-better-whitespace'
hook_add = '''
let g:better_whitespace_enabled = 1
let g:better_whitespace_filetypes_blacklist = [
      \ 'conf',
      \ 'coc-explorer',
      \ ]
let g:strip_whitespace_on_save  = 1
let g:strip_whitespace_confirm  = 0
'''

[[plugins]]
name    = 'ui/airline'
repo    = 'vim-airline/vim-airline'
depends = ['ui/vim-airline-themes']
hook_add = '''
let g:airline_powerline_fonts = 1

let g:airline#extensions#branch#enabled  = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tagbar#enabled  = 1
let g:airline#extensions#anzu#enabled    = 1
let g:airline_skip_empty_sections        = 1

let g:airline_theme = 'distinguished'

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

let g:airline#extensions#tabline#left_sep     = ''
let g:airline#extensions#tabline#left_alt_sep = ''

let g:airline_left_sep         = ''
let g:airline_left_alt_sep     = ''
let g:airline_right_sep        = ''
let g:airline_right_alt_sep    = ''
let g:airline_symbols.branch   = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr   = ''
'''

[[plugins]]
name = 'ui/airline-themes'
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
name = 'ui/indent-guides'
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_exclude_filetypes = [
      \ 'help',
      \ 'haskell',
      \ 'purescript',
      \ 'coc-explorer',
      \ ]
let g:indent_guides_guide_size  = 1
let g:indent_guides_auto_colors = 1
let g:indent_guides_enable_on_vim_startup = 1
'''

[[plugins]]
name = 'ui/devicons'
repo = 'ryanoasis/vim-devicons'
